{"version":3,"sources":["components/Search.js","components/Form.js","components/List.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Search","search","handleFilter","value","onChange","Form","handleSubmit","handleChange","handleNumber","newName","newNumber","onSubmit","style","padding","type","List","persons","handleDelete","map","person","name","number","onClick","id","Notification","message","className","baseUrl","personService","create","personObject","axios","post","then","response","data","getAll","get","deletePerson","delete","updateNumber","put","App","useState","setPersons","setNewName","setNewNumber","setSearch","errorMessage","setErrorMessage","setType","useEffect","catch","error","console","log","e","target","filteredPersons","filter","toLowerCase","includes","preventDefault","samePerson","find","p","window","confirm","result","setTimeout","returnedPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b86f02be.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Search = ({ search, handleFilter }) => {\n  return (\n    <div>\n      Search by name: <input value={search} onChange={handleFilter} />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst Form = ({\n  handleSubmit,\n  handleChange,\n  handleNumber,\n  newName,\n  newNumber,\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        Name: <input value={newName} onChange={handleChange} />\n      </div>\n      <div style={{ padding: \"0.5rem 0\" }}>\n        Number: <input value={newNumber} onChange={handleNumber} />\n      </div>\n      <button type=\"submit\">Add</button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from \"react\";\n\nconst List = ({ persons, handleDelete }) => {\n  return (\n    <ul>\n      {persons.map((person) => {\n        return (\n          <li key={person.id}>\n            {person.name} {person.number}\n            <button onClick={() => handleDelete(person)}>Delete</button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default List;\n","import React from \"react\";\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className={`${type === \"success\" ? \"notification\" : \"error\"}`}>\n      {message}\n    </div>\n  );\n};\n\nexport default Notification;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst create = (personObject) => {\n  return axios.post(baseUrl, personObject).then((response) => {\n    return response.data;\n  });\n};\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${baseUrl}/${id}`).then((response) => response.data);\n};\n\nconst updateNumber = (id, personObject) => {\n  return axios\n    .put(`${baseUrl}/${id}`, personObject)\n    .then((response) => response.data);\n};\n\nconst personService = {\n  create,\n  getAll,\n  deletePerson,\n  updateNumber,\n};\n\nexport default personService;\n","import React, { useState, useEffect } from \"react\";\nimport Search from \"./components/Search\";\nimport Form from \"./components/Form\";\nimport List from \"./components/List\";\nimport Notification from \"./components/Notification\";\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [type, setType] = useState(\"\");\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((response) => {\n        setPersons(response);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const person = {\n      name: newName,\n      number: newNumber,\n    };\n    const samePerson = persons.find((p) => p.name === newName);\n\n    if (samePerson) {\n      // window.alert(`${newName} already exists!`);\n      if (\n        window.confirm(\n          `${newName} already exists. Replace old number with a new one?`\n        )\n      ) {\n        personService\n          .updateNumber(samePerson.id, person)\n          .then((result) => {\n            setPersons(\n              persons.map((p) => (p.id !== samePerson.id ? p : result))\n            );\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setType(\"success\");\n            setErrorMessage(`Changed number for ${samePerson.name}`);\n            setTimeout(() => {\n              setErrorMessage(null);\n              setType(\"\");\n            }, 5000);\n          })\n          .catch((error) => {\n            setType(\"error\");\n            setErrorMessage(\n              `Information about ${samePerson.name} has already been removed from server`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n              setType(\"\");\n            }, 5000);\n            console.log(error);\n          });\n      }\n    } else {\n      personService\n        .create(person)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setType(\"success\");\n          setErrorMessage(`Added ${returnedPerson.name}`);\n          setTimeout(() => {\n            setErrorMessage(null);\n            setType(\"\");\n          }, 5000);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  const handleChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumber = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleFilter = (e) => {\n    setSearch(e.target.value);\n    const filteredPersons = persons.filter((person) =>\n      person.name.toLowerCase().includes(search.toLowerCase())\n    );\n    setPersons(filteredPersons);\n  };\n\n  const handleDelete = (person) => {\n    if (window.confirm(`Do you want to delete ${person.name}?`)) {\n      personService.deletePerson(person.id).then((result) => {\n        setPersons(persons.filter((p) => p.id !== person.id));\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} type={type} />\n      <Search search={search} handleFilter={handleFilter} />\n      <h2>Add someone</h2>\n      <Form\n        newName={newName}\n        newNumber={newNumber}\n        handleChange={handleChange}\n        handleNumber={handleNumber}\n        handleSubmit={handleSubmit}\n      />\n      <h2>Numbers</h2>\n      <List persons={persons} handleDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}